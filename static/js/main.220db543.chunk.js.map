{"version":3,"sources":["types/Status.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","React","memo","todos","selectedTodo","onSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","selectedTodos","onChangeSelectedTodos","onChangeQuery","value","onChange","event","target","All","Active","Completed","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","showingTodo","onShowingTodo","useState","curentUserId","setCurrentUserId","useEffect","userId","href","email","name","App","loadedTodos","setLoadedTodos","setQuery","setSelectedTodo","todosStatus","setTodosStatus","visibleTodos","useMemo","filter","queried","toLocaleLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.220db543.chunk.js","sourcesContent":["export enum Status {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectedTodo: (showingTodo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  selectedTodo,\n  onSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': todo.id === selectedTodo?.id,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => (\n                selectedTodo?.id === todo.id\n                  ? onSelectedTodo(null)\n                  : onSelectedTodo(todo)\n              )}\n            >\n              <span className=\"icon\">\n                <i className={classNames({\n                  'far fa-eye': !selectedTodo?.id,\n                  'far fa-eye-slash': selectedTodo?.id === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n));\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  query: string,\n  selectedTodos: string,\n  onChangeSelectedTodos: (selectedTodos: string) => void,\n  onChangeQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  selectedTodos,\n  onChangeSelectedTodos,\n  onChangeQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedTodos}\n            onChange={event => (\n              onChangeSelectedTodos(event.target.value)\n            )}\n          >\n            <option value={Status.All}>{Status.All}</option>\n            <option value={Status.Active}>{Status.Active}</option>\n            <option value={Status.Completed}>{Status.Completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onChangeQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onChangeQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  showingTodo: Todo,\n  onShowingTodo: (showingTodo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = React.memo(({\n  showingTodo,\n  onShowingTodo,\n}) => {\n  const [curentUserId, setCurrentUserId] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(showingTodo.userId).then(setCurrentUserId);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!curentUserId ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${showingTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onShowingTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {showingTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {showingTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              <a href={`mailto:${curentUserId.email}`}>\n                {curentUserId.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, {\n  useEffect,\n  useState,\n  useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [loadedTodos, setLoadedTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todosStatus, setTodosStatus] = useState(Status.All);\n\n  useEffect(() => {\n    getTodos()\n      .then(setLoadedTodos);\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return loadedTodos.filter(todo => {\n      const queried = todo.title.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase());\n\n      switch (todosStatus) {\n        case Status.Completed:\n          return todo.completed && queried;\n\n        case Status.Active:\n          return !todo.completed && queried;\n\n        case Status.All:\n        default:\n          return queried;\n      }\n    });\n  }, [todosStatus, query, loadedTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                selectedTodos={todosStatus}\n                onChangeSelectedTodos={setTodosStatus}\n                onChangeQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loadedTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedTodo={setSelectedTodo}\n                  />\n                )\n                : <Loader />}\n              {loadedTodos.length === 0 && (\n                <p>No todos yet. You can rest for now!</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          showingTodo={selectedTodo}\n          onShowingTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}